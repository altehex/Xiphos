This doc helps getting started with contribuitng to Xiphos. It covers the build system, the repository structure,
conventions, languages, etc.

Table of contents:
-------------------------------------------------------------------------------------------------------*
- BUILDING THANATOS
- SUPPORTED TARGETS
- REPOSITORY FILE TREE STRUCTURE
- PROGRAMMING LANGUAGES
- CONVENTIONS
- A LETTER TO SANTA CLAUS (TO-DOS)


|   BUILDING THANATOS
+------------------------------------------------------------------------------------------------------*
This project uses GNU Make. One may invoke just 'make' to build Xiphos. 'make help' outputs the targets. check.sh
helps with setting up the building environment.

Requirements:
- make
- bash 
- x86_64-elf-gcc or clang
- ld or ld.lld
- fasm

Building Xiphos from its installation image is planned for the future, but it's not happening in the near future as
it requires porting some build system or making one from scratch for the system.


|   SUPPORTED TARGETS
+------------------------------------------------------------------------------------------------------*
The only supported target now is x86_64. ARM support is planned. Xiphos has a UEFI bootloader, but BIOS support
is planned too (it's not hard to implement).



|   REPOSITORY FILE TREE STRUCTURE
+------------------------------------------------------------------------------------------------------*
|- /boot - bootloader;
|- /drivers - a set of basic device drivers;
|  +- /vga - VGA/BGA
|- /firmware - BIOS, ACPI;
|  +- /acpi - nuff said
|- /include - headers;
|- /liboses - hardware abstractions(needed both for the kernel and user applications);
+- /kernel - the main source files of the kernel.



|   PROGRAMMING LANGUAGES
+------------------------------------------------------------------------------------------------------*
The main language of the kernel is C. FASM is largely used. Additional modules can be written in C++, Rust, Pascal or any other language, able to do low-level stuff and make freestanding flat binaries(Elf support is planned).



|   CONVENTIONS
+------------------------------------------------------------------------------------------------------*

NAMING:
--------------------------------
Use snake_case for function names and function pointer typedefs(end those with _t).
Use camelCase for variable and structure names. Structure names should start with a capital letter(CamelCase).
Use SNAKE_CASE_WITH_CAPITAL_LETTERS for macros and enums.
Use single underscore prefix for thunks and stubs. Two underscores are usually for intrinsics.

ABI:
--------------------------------
The main calling convention of the kernel is xcall. More info is in /include/xcall.inc.



|   A LETTER TO SANTA CLAUS
+------------------------------------------------------------------------------------------------------*
Dear Santa, here's the list of thing I wish for Christmas:
- Custom executable format [ ]
- Some sort of package manager [ ]
- Networking [ ]
- VGA drivers [ ]
- ...
